---
# tasks file for ansible-k3d

- name: install k9s
  homebrew:
    name: derailed/k9s/k9s
    state: present

- name: install k3d
  homebrew:
    name: k3d
    state: present

- name: install tuntap
  homebrew_cask:
    name: tuntap
    state: present

- name: k3d list
  shell: |
    k3d list
  register: k3d_list
  failed_when: false
  changed_when: false # can't be idempotent

- name: k3d create cluster
  shell: |
    k3d create --workers 3
  register: k3d_create
  when: k3d_list.rc != 0
  async: 10
  poll: 10

- name: check on k3d create cluster
  async_status:
    jid: "{{ k3d_create.ansible_job_id }}"
  when: k3d_list.rc != 0
  register: k3d_create_result
  until: k3d_create_result.finished
  retries: 10
  changed_when: false # can't be idempotent

- name: get k3d kubeconfig
  shell: |
    cat $(k3d get-kubeconfig)
  register: k3d_kubeconfig
  when: (k3d_list.rc == 0) or (k3d_create.rc == 0)
  changed_when: false # can't be idempotent

- name: write kubeconfig
  copy:
    dest: "{{ local.kube }}/config.{{ k3d.name }}"
    content: |
      {{ k3d_kubeconfig.stdout }}

- name: clone https://github.com/arashkaffamanesh/k3d-k3s-metallb.git
  git:
    repo: https://github.com/arashkaffamanesh/k3d-k3s-metallb.git
    dest: "{{ local.source }}/arashkaffamanesh/k3d-k3s-metallb"

- name: clone https://github.com/metallb/metallb.git
  git:
    repo: https://github.com/metallb/metallb.git
    dest: "{{ local.source }}/metallb/metallb"

- name: deploy metallb namespace
  k8s:
    state: present
    kubeconfig: "{{ local.kube }}/config.{{ k3d.name }}"
    src: "{{ local.source }}/metallb/metallb/manifests/namespace.yaml"

- name: deploy metallb
  k8s:
    state: present
    kubeconfig: "{{ local.kube }}/config.{{ k3d.name }}"
    src: "{{ local.source }}/metallb/metallb/manifests/metallb.yaml"

- name: check metallb memberlist secret
  shell: |
    kubectl --kubeconfig {{ local.kube }}/config.{{ k3d.name }} get secret -n metallb-system memberlist
  register: metallb_memberlist_secret
  failed_when: false
  changed_when: false # can't be idempotent

- name: create metallb memberlist secret
  shell: |
    kubectl --kubeconfig {{ local.kube }}/config.{{ k3d.name }} create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  when: metallb_memberlist_secret.rc != 0

- name: get the traefik endpoint
  shell: |
    kubectl --kubeconfig {{ local.kube }}/config.{{ k3d.name }} get svc -n kube-system traefik -o json | jq -r '.status.loadBalancer.ingress[0].ip'
  register: traefik_endpoint
  changed_when: false # can't be idempotent

- name: get the traefik network (hacky; first 3 octets)
  shell: |
    kubectl --kubeconfig {{ local.kube }}/config.{{ k3d.name }} get svc -n kube-system traefik -o json | jq -r '.status.loadBalancer.ingress[0].ip' | cut -d\. -f1-3
  register: traefik_network
  changed_when: false # can't be idempotent

- name: check if metallb config exists
  shell: |
    kubectl --kubeconfig {{ local.kube }}/config.{{ k3d.name }} get configmap -n metallb-system config
  register: metallb_config
  failed_when: false
  changed_when: false # can't be idempotent

- name: create the metallb config
  k8s:
    state: present
    kubeconfig: "{{ local.kube }}/config.{{ k3d.name }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - "{{ traefik_network.stdout }}.100-{{ traefik_network.stdout }}.199"
  when: metallb_config.rc != 0

- name: check if tap1 exists
  shell: |
    ifconfig tap1
  register: tap1
  failed_when: false
  changed_when: false # can't be idempotent

- name: docker tuntap - https://blog.kubernauts.io/k3s-with-k3d-and-metallb-on-mac-923a3255c36e
  shell: |
    k3d stop {{ k3.name }};
    ./docker-tuntap-osx/sbin/docker_tap_install.sh;
    sleep 60;
    ./docker-tuntap-osx/sbin/docker_tap_up.sh;
    ifconfig tap1;
    ping -c1 10.0.75.1;
    ping -c1 10.0.75.2;
    k3d start {{ k3.name }}
  args:
    chdir: "{{ HOME }}/src/github.com/arashkaffamanesh/k3d-k3s-metallb"
  when: tap1.rc != 0

- name: check if tap1 exists, again
  shell: |
    ifconfig tap1
  register: tap1
  failed_when: false
  changed_when: false # can't be idempotent

- name: check the route to the traefik network
  shell: |
    route get -net {{ traefik_network.stdout }}.0/24 | grep '^destination: default'
  register: traefik_route
  failed_when: false
  changed_when: false # can't be idempotent

- name: add the route to the traefik network (if necessary)
  shell: |
    route add -net {{ traefik_network.stdout }}.0/24 -netmask 255.255.255.0 10.0.75.2
  when: traefik_route.rc == 0
  become: yes

- name: curl the traefik endpoint
  shell:
    curl -v http://{{ traefik_endpoint.stdout }}
  register: traefik_fetch
  changed_when: false # can't be idempotent
